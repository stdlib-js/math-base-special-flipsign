{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar SIGN_MASK = require( '@stdlib/constants-float64-high-word-sign-mask' );\nvar toWords = require( '@stdlib/number-float64-base-to-words' );\nvar getHighWord = require( '@stdlib/number-float64-base-get-high-word' );\nvar fromWords = require( '@stdlib/number-float64-base-from-words' );\n\n\n// VARIABLES //\n\n// High/low words workspace:\nvar WORDS = [ 0>>>0, 0>>>0 ]; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `x*y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = flipsign( -3.0, 10.0 );\n* // returns -3.0\n*\n* @example\n* var z = flipsign( -3.0, -1.0 );\n* // returns 3.0\n*\n* @example\n* var z = flipsign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = flipsign( -3.0, -0.0 );\n* // returns 3.0\n*\n* @example\n* var z = flipsign( -0.0, 1.0 );\n* // returns -0.0\n*\n* @example\n* var z = flipsign( 0.0, -1.0 );\n* // returns -0.0\n*/\nfunction flipsign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on (if on):\n\thy &= SIGN_MASK;\n\n\t// Flip the sign bit of `x` only when the sign bit of `y` is on:\n\thx ^= hy; // 1^1=0 (flipped), 0^1=1 (flipped), 1^0=1 (unchanged), 0^0=0 (unchanged)\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `x*y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = flipsign;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `x*y`.\n*\n* @module @stdlib/math-base-special-flipsign\n*\n* @example\n* var flipsign = require( '@stdlib/math-base-special-flipsign' );\n*\n* var z = flipsign( -3.0, 10.0 );\n* // returns -3.0\n*\n* z = flipsign( -3.0, -1.0 );\n* // returns 3.0\n*\n* z = flipsign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = flipsign( -3.0, -0.0 );\n* // returns 3.0\n*\n* z = flipsign( -0.0, 1.0 );\n* // returns -0.0\n*\n* z = flipsign( 0.0, -1.0 );\n* // returns -0.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,+CAAgD,EACrEC,EAAU,QAAS,sCAAuC,EAC1DC,EAAc,QAAS,2CAA4C,EACnEC,EAAY,QAAS,wCAAyC,EAM9DC,EAAQ,CAAE,EAAO,CAAM,EAoC3B,SAASC,EAAUC,EAAGC,EAAI,CACzB,IAAIC,EACAC,EAGJ,OAAAR,EAAQ,OAAQK,EAAGF,EAAO,EAAG,CAAE,EAC/BI,EAAKJ,EAAO,CAAE,EAGdK,EAAKP,EAAaK,CAAE,EAGpBE,GAAMT,EAGNQ,GAAMC,EAGCN,EAAWK,EAAIJ,EAAO,CAAE,CAAE,CAClC,CAKAL,EAAO,QAAUM,IC1CjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "SIGN_MASK", "toWords", "getHighWord", "fromWords", "WORDS", "flipsign", "x", "y", "hx", "hy", "main"]
}
